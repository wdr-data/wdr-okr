trend_ignore_filters_dict = {
    "zeitungen": [
        "express köln",
        "general-anzeiger bonn",
        "general-anzeiger wuppertal",
    ],
}

trend_filters_dict = {
    "themen": [
        "corona",
        "coronavirus",
        "covid",
    ],
    "gemeinden": [
        "Ennepetal",
        "Möhnesee",
        "Gangelt",
        "Bad Honnef",
        "Schwalmtal",
        "Meinerzhagen",
        "Plettenberg",
        "Jüchen",
        "Nettetal",
        "Nümbrecht",
        "Horstmar",
        "Hiddenhausen",
        "Wettringen",
        "Merzenich",
        "Mechernich",
        "Wetter (Ruhr)",
        "Much",
        "Versmold",
        "Meschede",
        "Rhede",
        "Sonsbeck",
        "Inden",
        "Greven",
        "Hallenberg",
        "Rosendahl",
        "Königswinter",
        "Euskirchen",
        "Viersen",
        "Kreuztal",
        "Straelen",
        "Bochum",
        "Herten",
        "Netphen",
        "Kamp-Lintfort",
        "Troisdorf",
        "Neunkirchen-Seelscheid",
        "Drolshagen",
        "Gummersbach",
        "Steinheim",
        "Gütersloh",
        "Herne",
        "Salzkotten",
        "Mettingen",
        "Wadersloh",
        "Enger",
        "Lennestadt",
        "Neuenkirchen",
        "Stolberg (Rhld.)",
        "Grevenbroich",
        "Sendenhorst",
        "Leopoldshöhe",
        "Büren",
        "Löhne",
        "Bad Wünnenberg",
        "Brüggen",
        "Roetgen",
        "Herford",
        "Soest",
        "Recke",
        "Hagen",
        "Hünxe",
        "Düren",
        "Wachtendonk",
        "Wuppertal",
        "Bad Lippspringe",
        "Extertal",
        "Schalksmühle",
        "Lindlar",
        "Ladbergen",
        "Gronau (Westf.)",
        "Anröchte",
        "Nettersheim",
        "Hüllhorst",
        "Senden",
        "Werl",
        "Sprockhövel",
        "Nörvenich",
        "Kürten",
        "Gelsenkirchen",
        "Delbrück",
        "Schermbeck",
        "Morsbach",
        "Raesfeld",
        "Warburg",
        "Barntrup",
        "Emmerich am Rhein",
        "Bergkamen",
        "Eslohe (Sauerland)",
        "Heinsberg",
        "Dorsten",
        "Brakel",
        "Hamm",
        "Wachtberg",
        "Werne",
        "Heiligenhaus",
        "Rheda-Wiedenbrück",
        "Schöppingen",
        "Linnich",
        "Herzebrock-Clarholz",
        "Coesfeld",
        "Schleiden",
        "Blomberg",
        "Saerbeck",
        "Reichshof",
        "Essen",
        "Oelde",
        "Arnsberg",
        "Eschweiler",
        "Solingen",
        "Dortmund",
        "Porta Westfalica",
        "Tecklenburg",
        "Haltern am See",
        "Rheinberg",
        "Petershagen",
        "Erkelenz",
        "Lübbecke",
        "Werther (Westf.)",
        "Bottrop",
        "Freudenberg",
        "Neuenrade",
        "Kerpen",
        "Issum",
        "Langerwehe",
        "Ahlen",
        "Rietberg",
        "Menden (Sauerland)",
        "Geseke",
        "Brilon",
        "Minden",
        "Krefeld",
        "Niederkrüchten",
        "Frechen",
        "Hennef (Sieg)",
        "Niederkassel",
        "Gladbeck",
        "Stemwede",
        "Datteln",
        "Lünen",
        "Ostbevern",
        "Kempen",
        "Sundern (Sauerland)",
        "Witten",
        "Spenge",
        "Steinhagen",
        "Borgholzhausen",
        "Kirchhundem",
        "Alfter",
        "Hemer",
        "Weeze",
        "Havixbeck",
        "Medebach",
        "Beckum",
        "Geilenkirchen",
        "Brühl",
        "Bergneustadt",
        "Wickede (Ruhr)",
        "Rheine",
        "Hörstel",
        "Heimbach",
        "Metelen",
        "Kevelaer",
        "Erkrath",
        "Selfkant",
        "Borken",
        "Bergheim",
        "Olsberg",
        "Velbert",
        "Vlotho",
        "Dörentrup",
        "Waltrop",
        "Hille",
        "Halver",
        "Olfen",
        "Kleve",
        "Steinfurt",
        "Preußisch Oldendorf",
        "Lippstadt",
        "Holzwickede",
        "Leichlingen (Rhld.)",
        "Oer-Erkenschwick",
        "Horn-Bad Meinberg",
        "Isselburg",
        "Alsdorf",
        "Herdecke",
        "Goch",
        "Lügde",
        "Lichtenau",
        "Ibbenbüren",
        "Welver",
        "Odenthal",
        "Jülich",
        "Kerken",
        "Rheinbach",
        "Bielefeld",
        "Werdohl",
        "Everswinkel",
        "Ennigerloh",
        "Hückeswagen",
        "Blankenheim",
        "Übach-Palenberg",
        "Hattingen",
        "Stadtlohn",
        "Lemgo",
        "Verl",
        "Marienmünster",
        "Neunkirchen",
        "Lippetal",
        "Hellenthal",
        "Baesweiler",
        "Velen",
        "Aachen",
        "Xanten",
        "Haan",
        "Ense",
        "Vettweiß",
        "Harsewinkel",
        "Bad Sassendorf",
        "Rödinghausen",
        "Paderborn",
        "Mülheim an der Ruhr",
        "Willich",
        "Bornheim",
        "Ascheberg",
        "Münster",
        "Gevelsberg",
        "Bedburg",
        "Schloß Holte-Stukenbrock",
        "Billerbeck",
        "Kamen",
        "Lüdinghausen",
        "Nottuln",
        "Rommerskirchen",
        "Fröndenberg/Ruhr",
        "Kalkar",
        "Hürth",
        "Wegberg",
        "Höxter",
        "Simmerath",
        "Altena",
        "Drensteinfurt",
        "Schmallenberg",
        "Rees",
        "Hilden",
        "Schwelm",
        "Hamminkeln",
        "Beelen",
        "Neuss",
        "Olpe",
        "Pulheim",
        "Nachrodt-Wiblingwerde",
        "Düsseldorf",
        "Herscheid",
        "Balve",
        "Korschenbroich",
        "Warstein",
        "Iserlohn",
        "Bad Berleburg",
        "Moers",
        "Lengerich",
        "Ahaus",
        "Ratingen",
        "Wesseling",
        "Langenberg",
        "Kall",
        "Zülpich",
        "Lotte",
        "Remscheid",
        "Langenfeld (Rhld.)",
        "Schlangen",
        "Hövelhof",
        "Waldfeucht",
        "Monheim am Rhein",
        "Burscheid",
        "Burbach",
        "Kranenburg",
        "Borgentreich",
        "Elsdorf",
        "Titz",
        "Detmold",
        "Winterberg",
        "Wülfrath",
        "Nideggen",
        "Oerlinghausen",
        "Wiehl",
        "Duisburg",
        "Castrop-Rauxel",
        "Hückelhoven",
        "Wermelskirchen",
        "Eitorf",
        "Telgte",
        "Weilerswist",
        "Gescher",
        "Unna",
        "Beverungen",
        "Wenden",
        "Voerde (Niederrhein)",
        "Erftstadt",
        "Espelkamp",
        "Westerkappeln",
        "Wesel",
        "Siegburg",
        "Bedburg-Hau",
        "Mönchengladbach",
        "Bad Laasphe",
        "Erwitte",
        "Augustdorf",
        "Lüdenscheid",
        "Ruppichteroth",
        "Niederzier",
        "Waldbröl",
        "Leverkusen",
        "Köln",
        "Halle (Westf.)",
        "Swisttal",
        "Recklinghausen",
        "Bad Oeynhausen",
        "Windeck",
        "Kreuzau",
        "Rheurdt",
        "Oberhausen",
        "Mettmann",
        "Neukirchen-Vluyn",
        "Uedem",
        "Würselen",
        "Herzogenrath",
        "Alpen",
        "Radevormwald",
        "Marsberg",
        "Wassenberg",
        "Dormagen",
        "Aldenhoven",
        "Sassenberg",
        "Monschau",
        "Overath",
        "Finnentrop",
        "Nordwalde",
        "Dülmen",
        "Breckerfeld",
        "Hürtgenwald",
        "Kaarst",
        "Lage",
        "Lienen",
        "Bergisch Gladbach",
        "Meckenheim",
        "Dahlem",
        "Altenberge",
        "Kalletal",
        "Bonn",
        "Schieder-Schwalenberg",
        "Rahden",
        "Engelskirchen",
        "Bünde",
        "Vreden",
        "Sankt Augustin",
        "Meerbusch",
        "Nordkirchen",
        "Lohmar",
        "Dinslaken",
        "Hopsten",
        "Erndtebrück",
        "Grefrath",
        "Südlohn",
        "Tönisvorst",
        "Bönen",
        "Schwerte",
        "Ochtrup",
        "Bad Münstereifel",
        "Selm",
        "Marienheide",
        "Kirchlengern",
        "Heek",
        "Laer",
        "Willebadessen",
        "Rösrath",
        "Wipperfürth",
        "Bad Driburg",
        "Bad Salzuflen",
        "Emsdetten",
        "Siegen",
        "Nieheim",
        "Kierspe",
        "Legden",
        "Borchen",
        "Rüthen",
        "Warendorf",
        "Wilnsdorf",
        "Hilchenbach",
        "Altenbeken",
        "Bocholt",
        "Geldern",
        "Reken",
        "Attendorn",
        "Bestwig",
        "Marl",
        "Heiden",
    ],
    "kreise": [
        "Bochum",
        "Dortmund",
        "Ennepe-Ruhr-Kreis",
        "Hagen",
        "Hamm",
        "Herne",
        "Hochsauerlandkreis",
        "Märkischer Kreis",
        "Olpe",
        "Siegen-Wittgenstein",
        "Soest",
        "Unna",
        "Bielefeld",
        "Gütersloh",
        "Herford",
        "Höxter",
        "Lippe",
        "Minden-Lübbecke",
        "Paderborn",
        "Duisburg",
        "Düsseldorf",
        "Essen",
        "Kleve",
        "Krefeld",
        "Mettmann",
        "Mönchengladbach",
        "Mülheim an der Ruhr",
        "Oberhausen",
        "Remscheid",
        "Rhein-Kreis Neuss",
        "Solingen",
        "Viersen",
        "Wesel",
        "Wuppertal",
        "Aachen",
        "Bonn",
        "Düren",
        "Euskirchen",
        "Heinsberg",
        "Köln",
        "Leverkusen",
        "Oberbergischer Kreis",
        "Rhein-Erft-Kreis",
        "Rhein-Sieg-Kreis",
        "Rheinisch-Bergischer Kreis",
        "Borken",
        "Bottrop",
        "Coesfeld",
        "Gelsenkirchen",
        "Münster",
        "Recklinghausen",
        "Steinfurt",
        "Warendorf",
    ],
    "regionen": [
        "NRW",
        "Nordrhein-Westfalen",
        "North Rhine-Westfalia",
        "Cologne",
        "Nordrhein",
        "Westfalen",
        "Rheinland",
        "Niederrhein",
        "Eifel",
        "Nordeifel",
        "Sauerland",
        "Siegerland",
        "Ostwestfalen",
        "Lippe",
    ],
}


# Read and combine filter entries
trend_filters = []

for filter_list in trend_filters_dict:
    trend_filters.extend(trend_filters_dict[filter_list])

trend_filters = set(trend_filters)

# Normalize and escape all filter entries
trend_filters = [re.escape(entry.lower()) for entry in trend_filters]

# Compile filter entries into regex
trend_filters = r"(\b%s\b)" % r"\b|\b".join(trend_filters)
trend_filters = re.compile(trend_filters)
