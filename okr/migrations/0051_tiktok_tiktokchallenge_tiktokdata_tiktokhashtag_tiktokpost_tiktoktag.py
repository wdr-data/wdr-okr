# Generated by Django 3.1.7 on 2021-03-12 04:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("okr", "0050_auto_20210311_1912"),
    ]

    operations = [
        migrations.CreateModel(
            name="TikTok",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name des Objekts",
                        max_length=200,
                        verbose_name="Name",
                    ),
                ),
                (
                    "quintly_profile_id",
                    models.IntegerField(verbose_name="Quintly Profil-ID"),
                ),
            ],
            options={
                "verbose_name": "TikTok-Account",
                "verbose_name_plural": "TikTok-Accounts",
                "db_table": "tiktok",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TikTokChallenge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.TextField(
                        help_text="Title der Challenge",
                        unique=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description der Challenge",
                        verbose_name="Description",
                    ),
                ),
                (
                    "first_seen",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Der Zeitpunkt, zu dem diese Challenge erstmals erfasst wurde.",
                        verbose_name="Zeitpunkt der Ersterfassung",
                    ),
                ),
            ],
            options={
                "verbose_name": "TikTok-Challenge",
                "verbose_name_plural": "TikTok-Challenges",
                "db_table": "tiktok_challenge",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="TikTokHashtag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hashtag", models.TextField(unique=True, verbose_name="Hashtag")),
                (
                    "first_seen",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Der Zeitpunkt, zu dem dieser Hashtag erstmals erfasst wurde.",
                        verbose_name="Zeitpunkt der Ersterfassung",
                    ),
                ),
            ],
            options={
                "verbose_name": "TikTok-Hashtag",
                "verbose_name_plural": "TikTok-Hashtags",
                "db_table": "tiktok_hashtag",
                "ordering": ["hashtag"],
            },
        ),
        migrations.CreateModel(
            name="TikTokTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="Title der Challenge",
                        unique=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "first_seen",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Der Zeitpunkt, zu dem dieser Tag erstmals erfasst wurde.",
                        verbose_name="Zeitpunkt der Ersterfassung",
                    ),
                ),
            ],
            options={
                "verbose_name": "TikTok-Tag",
                "verbose_name_plural": "TikTok-Tags",
                "db_table": "tiktok_tag",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TikTokPost",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_id",
                    models.TextField(unique=True, verbose_name="Externe ID"),
                ),
                ("created_at", models.DateTimeField(verbose_name="Erstellungsdatum")),
                (
                    "link",
                    models.URLField(help_text="URL des Postings.", verbose_name="Link"),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Volltext des Postings.", verbose_name="Text"
                    ),
                ),
                (
                    "video_length",
                    models.DurationField(
                        help_text="Länge des Videos in Sekunden.",
                        null=True,
                        verbose_name="Video Länge",
                    ),
                ),
                (
                    "video_cover_url",
                    models.TextField(
                        help_text="URL des Video-Coverbildes.",
                        null=True,
                        verbose_name="Video-Cover URL",
                    ),
                ),
                (
                    "likes",
                    models.IntegerField(
                        help_text="Anzahl der Likes", null=True, verbose_name="Likes"
                    ),
                ),
                (
                    "comments",
                    models.IntegerField(
                        help_text="Anzahl der Kommentare",
                        null=True,
                        verbose_name="Kommentare",
                    ),
                ),
                (
                    "shares",
                    models.IntegerField(
                        help_text="Anzahl der Shares", null=True, verbose_name="Shares"
                    ),
                ),
                (
                    "views",
                    models.IntegerField(
                        help_text="Anzahl der Views", null=True, verbose_name="Likes"
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Zuletzt upgedated"
                    ),
                ),
                (
                    "challenges",
                    models.ManyToManyField(
                        blank=True,
                        db_table="tiktok_post_tiktok_challenge",
                        help_text="Die für den TikTok-Post verwendeten Challenges.",
                        related_name="posts",
                        related_query_name="post",
                        to="okr.TikTokChallenge",
                        verbose_name="Challenges",
                    ),
                ),
                (
                    "hashtags",
                    models.ManyToManyField(
                        blank=True,
                        db_table="tiktok_post_tiktok_hashtag",
                        help_text="Die für den TikTok-Post vergebenen Hashtags.",
                        related_name="posts",
                        related_query_name="post",
                        to="okr.TikTokHashtag",
                        verbose_name="Hashtags",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        db_table="tiktok_post_tiktok_tag",
                        help_text="Die für den TikTok-Post verwendeten Tags.",
                        related_name="posts",
                        related_query_name="post",
                        to="okr.TikTokTag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "tiktok",
                    models.ForeignKey(
                        help_text="Globale ID des TikTok-Accounts",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        related_query_name="post",
                        to="okr.tiktok",
                        verbose_name="TikTok-Account",
                    ),
                ),
            ],
            options={
                "verbose_name": "TikTok-Post",
                "verbose_name_plural": "TikTok-Posts",
                "db_table": "tiktok_post",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TikTokData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Datum")),
                (
                    "interval",
                    models.CharField(
                        choices=[
                            ("daily", "Täglich"),
                            ("weekly", "Wöchentlich"),
                            ("monthly", "Monatlich"),
                        ],
                        help_text="Intervall (täglich, wöchentlich oder monatlich)",
                        max_length=10,
                        verbose_name="Zeitraum",
                    ),
                ),
                (
                    "followers",
                    models.IntegerField(
                        help_text="Followers des Accounts",
                        null=True,
                        verbose_name="Follower",
                    ),
                ),
                (
                    "followers_change",
                    models.IntegerField(
                        help_text="Veränderung Followers",
                        null=True,
                        verbose_name="Veränderung Followers",
                    ),
                ),
                (
                    "following",
                    models.IntegerField(
                        help_text="Gefolgte Accounts",
                        null=True,
                        verbose_name="Following",
                    ),
                ),
                (
                    "following_change",
                    models.IntegerField(
                        help_text="Veränderung der gefolgten Accounts",
                        null=True,
                        verbose_name="Veränderung Following",
                    ),
                ),
                (
                    "likes",
                    models.IntegerField(
                        help_text="Likes für den Account",
                        null=True,
                        verbose_name="Likes",
                    ),
                ),
                (
                    "likes_change",
                    models.IntegerField(
                        help_text="Veränderung der Likes für den Account",
                        null=True,
                        verbose_name="Veränderung Likes",
                    ),
                ),
                (
                    "videos",
                    models.IntegerField(
                        help_text="Anzahl der Videos des Accounts",
                        null=True,
                        verbose_name="Videos",
                    ),
                ),
                (
                    "videos_change",
                    models.IntegerField(
                        help_text="Veränderung der Anzahl der Videos des Accounts",
                        null=True,
                        verbose_name="Veränderung Videos",
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Zuletzt upgedated"
                    ),
                ),
                (
                    "tiktok",
                    models.ForeignKey(
                        help_text="Globale ID des TikTok-Accounts",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        related_query_name="data",
                        to="okr.tiktok",
                        verbose_name="TikTok-Account",
                    ),
                ),
            ],
            options={
                "verbose_name": "TikTok-Daten",
                "verbose_name_plural": "TikTok-Daten",
                "db_table": "tiktok_data",
                "ordering": ["-date"],
                "unique_together": {("tiktok", "date", "interval")},
            },
        ),
    ]
