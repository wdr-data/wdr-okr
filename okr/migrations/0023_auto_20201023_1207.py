# Generated by Django 3.1.2 on 2020-10-23 10:07
import datetime as dt

from django.db import migrations, models


def fill_podcast_data_history(apps, schema_editor):
    Podcast = apps.get_model("okr", "Podcast")

    if Podcast.objects.all().count() == 0:
        return

    from okr.scrapers.podcasts.spotify_api import spotify_api
    from spotipy.exceptions import SpotifyException

    for podcast in Podcast.objects.all():
        for data in podcast.data_spotify.all():
            date = data.date
            try:
                data.listeners_weekly = spotify_api.podcast_data_date_range(
                    podcast.spotify_id,
                    "listeners",
                    start=date - dt.timedelta(days=7),
                    end=date,
                )["total"]
            except SpotifyException:
                pass

            try:
                data.listeners_monthly = spotify_api.podcast_data_date_range(
                    podcast.spotify_id,
                    "listeners",
                    start=date - dt.timedelta(days=30),
                    end=date,
                )["total"]
            except SpotifyException:
                pass

            data.save()


class Migration(migrations.Migration):
    dependencies = [
        ("okr", "0022_auto_20201022_1358"),
    ]

    operations = [
        migrations.AddField(
            model_name="podcastdataspotify",
            name="listeners_monthly",
            field=models.IntegerField(default=0, verbose_name="Listeners (monatlich)"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="podcastdataspotify",
            name="listeners_weekly",
            field=models.IntegerField(
                default=0, verbose_name="Listeners (w√∂chentlich)"
            ),
            preserve_default=False,
        ),
        migrations.RunPython(fill_podcast_data_history),
    ]
